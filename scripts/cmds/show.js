// show.js
// Show all commands by category (with /show all support)
// Author: Helal

const { commands } = global.GoatBot;

module.exports = {
  config: {
    name: "show",
    aliases: ["cmdlist", "category"],
    version: "2.0",
    author: "Helal",
    countDown: 5,
    role: 0,
    category: "system",
    shortDescription: { en: "Show commands by category or all" },
  },

  onStart: async function ({ message, args }) {
    try {
      if (!args[0]) {
        return message.reply(
          "‚öôÔ∏è Usage:\n/show <category>\n/show all\n\nExample:\n/show game\n/show ai\n/show all"
        );
      }

      const inputCat = args.join(" ").trim().toUpperCase();
      const categories = {};

      for (const [name, cmd] of commands) {
        const cat = (cmd.config.category || "OTHER").toUpperCase();
        if (!categories[cat]) categories[cat] = [];
        categories[cat].push(name);
      }

      const emojiMap = {
        TEXT: "‚ú®",
        TOOLS: "üß∞",
        UTILITY: "üß©",
        WIKI: "üìö",
        GAME: "üéÆ",
        SYSTEM: "‚öôÔ∏è",
        INFO: "üìò",
        IMAGE: "üñºÔ∏è",
        OWNER: "üëë",
        OTHER: "üì¶",
        ADMIN: "üõ†Ô∏è",
        MUSIC: "üéµ",
        AI: "ü§ñ",
        "AI-IMAGE": "üß†",
        YOUTUBE: "üì∫",
        GOOGLE: "üåç",
        ECONOMY: "üí∞",
        SOCIAL: "üí¨",
        WEATHER: "üå¶Ô∏è",
        ISLAMIC: "üïå",
        CONFIG: "‚öôÔ∏è",
        CONTACT: "‚òéÔ∏è",
        IDEA: "üí°",
        CHAT: "üí≠",
        FUN: "üéâ",
        MEDIA: "üñ•Ô∏è",
        VIDEO: "üé¨",
        SECURITY: "üîí",
        SERVER: "üñß",
        EDUCATION: "üéì",
        ROLEPLAY: "üé≠",
        STICKER: "üè∑Ô∏è",
        MEME: "üòÇ",
        LOVE: "üíñ",
        MODERATION: "üö®",
        RANK: "üìà",
        ANIME: "üå∏",
        BOT: "ü§ñ",
        SUPPORT: "üß©",
        DATABASE: "üóÉÔ∏è",
        DEVELOPER: "üíª",
        NSFW: "üö´",
      };

      // if user typed /show all ‚Üí show everything
      if (inputCat === "ALL") {
        let msg = "üåç ùóîùóüùóü ùóñùóîùóßùóòùóöùó¢ùó•ùóúùóòùó¶ ùóñùó¢ùó†ùó†ùóîùó°ùóóùó¶ üåç\n\n";
        for (const cat in categories) {
          const emoji = emojiMap[cat] || "üìÅ";
          msg += `${emoji} ${cat}\n`;
          msg += categories[cat].map((c) => `‚ö° ${c}`).join("\n");
          msg += "\n\n";
        }
        return message.reply(msg);
      }

      // single category show
      const found = categories[inputCat];
      if (!found) return message.reply(`‚ùå No commands found in category: ${inputCat}`);

      const emoji = emojiMap[inputCat] || "üìÅ";
      const msg = `${emoji} Commands in category [${inputCat}]:\n\n${found
        .map((n) => `‚ö° ${n}`)
        .join("\n")}`;

      return message.reply(msg);
    } catch (err) {
      console.error(err);
      return message.reply("‚ùå Error while listing commands.");
    }
  },
};